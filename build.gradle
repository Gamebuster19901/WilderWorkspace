plugins {
	id 'application'
	id 'java-library'
	id 'eclipse'
	id 'com.github.johnrengelman.shadow' version "8.1.1"
	id 'maven-publish'
}

repositories {
    maven {
        url "https://maven.fabricmc.net"
    }
	mavenCentral()
}

version = workspaceVersion
group = "com.wildermods"
archivesBaseName = "wilderworkspace"

application {
	mainClass = 'com.wildermods.workspace.Main'
}

sourceCompatibility = '17'
targetCompatibility = '17'

dependencies { //For some reason, dependencies must be specified as shadow and implementation or dependencies will be missing at compile time, because fuck yoyu
	shadow group: 'net.fabricmc', name: 'fabric-loom', version: loomVersion
	shadow group: 'commons-io', name: 'commons-io', version: commonsIOVersion
	shadow group: 'org.apache.commons', name: 'commons-text', version: commonsTextVersion
	shadow group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	shadow group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
	shadow group: 'net.fabricmc', name: 'fabric-fernflower', version: fernFlowerVersion
	implementation group: 'net.fabricmc', name: 'fabric-loom', version: loomVersion
	implementation group: 'commons-io', name: 'commons-io', version: commonsIOVersion
	implementation group: 'org.apache.commons', name: 'commons-text', version: commonsTextVersion
	implementation group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
	implementation group: 'net.fabricmc', name: 'fabric-fernflower', version: fernFlowerVersion
}

import org.apache.tools.ant.filters.ReplaceTokens

task processSource(type: Sync) {
	from sourceSets.main.java
	inputs.property 'workspaceVersion', workspaceVersion
	inputs.property 'fabricLoaderVersion', fabricLoaderVersion
	inputs.property 'wilderLoaderVersion', wilderLoaderVersion
	inputs.property 'gameProviderVersion', gameProviderVersion
	inputs.property 'tinyMappingsVersion', tinyMappingsVersion
	inputs.property 'tinyRemapperVersion', tinyRemapperVersion
	inputs.property 'accessWidenerVersion', accessWidenerVersion
	inputs.property 'asmVersion', asmVersion
	inputs.property 'mixinVersion', mixinVersion
	inputs.property 'guavaVersion', guavaVersion
	inputs.property 'gsonVersion', gsonVersion
	inputs.property 'loomVersion', loomVersion
	inputs.property 'commonsTextVersion', commonsTextVersion
	inputs.property 'commonsIOVersion', commonsIOVersion
	
	filter(ReplaceTokens, tokens: [workspaceVersion: workspaceVersion, fabricLoaderVersion: fabricLoaderVersion,
		wilderLoaderVersion: wilderLoaderVersion, gameProviderVersion: gameProviderVersion, 
		tinyMappingsVersion: tinyMappingsVersion, tinyRemapperVersion: tinyRemapperVersion,
		accessWidenerVersion: accessWidenerVersion, asmVersion: asmVersion, mixinVersion: mixinVersion,
		guavaVersion: guavaVersion, gsonVersion: gsonVersion, enigmaVersion: loomVersion,
		commonsTextVersion: commonsTextVersion, commonsIOVersion: commonsIOVersion
	])
	into "$buildDir/src"
	
}

shadowJar {
	mergeServiceFiles()
	configurations = [project.configurations.shadow]
	exclude 'META-INF/LICENSE'
	exclude 'META-INF/LICENSE.txt'
	exclude 'META-INF/LICENSsE.txt'
	exclude 'META-INF/NOTICE'
	exclude 'META-INF/NOTICE.txt'
	exclude 'META-INF/DEPENDENCIES'
	exclude 'LICENSE.txt'
}

compileJava {
	source = processSource.outputs
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
  }
  repositories {
    mavenLocal()
  }
}
